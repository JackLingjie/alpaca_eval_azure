执行参数: gemma_glan1.5, gemma_glan1.5_default_template_2e5_e2_bsz2k_dpo_bsz32_2e7_1e, ., checkpoint-6119
gemma_glan1.5_._checkpoint-6119
INFO 12-12 06:34:28 llm_engine.py:174] Initializing an LLM engine (v0.5.4) with config: model='/mnt/lingjiejiang/textual_aesthetics/exp/saves/gemma_glan1.5/gemma_glan1.5_default_template_2e5_e2_bsz2k_dpo_bsz32_2e7_1e/./checkpoint-6119', speculative_config=None, tokenizer='/mnt/lingjiejiang/textual_aesthetics/exp/saves/gemma_glan1.5/gemma_glan1.5_default_template_2e5_e2_bsz2k_dpo_bsz32_2e7_1e/./checkpoint-6119', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=8192, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None), seed=0, served_model_name=/mnt/lingjiejiang/textual_aesthetics/exp/saves/gemma_glan1.5/gemma_glan1.5_default_template_2e5_e2_bsz2k_dpo_bsz32_2e7_1e/./checkpoint-6119, use_v2_block_manager=False, enable_prefix_caching=False)
INFO 12-12 06:34:29 model_runner.py:720] Starting to load model /mnt/lingjiejiang/textual_aesthetics/exp/saves/gemma_glan1.5/gemma_glan1.5_default_template_2e5_e2_bsz2k_dpo_bsz32_2e7_1e/./checkpoint-6119...
INFO 12-12 06:34:37 model_runner.py:732] Loading model weights took 4.7384 GB
INFO 12-12 06:34:37 gpu_executor.py:102] # GPU blocks: 233927, # CPU blocks: 14563
INFO 12-12 06:34:40 model_runner.py:1024] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 12-12 06:34:40 model_runner.py:1028] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
